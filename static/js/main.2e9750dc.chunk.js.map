{"version":3,"sources":["components/LoginForm/index.module.css","store/reducers/auth/types.ts","store/reducers/auth/index.ts","store/reducers/event/types.ts","store/reducers/event/index.ts","store/reducers/index.ts","router/index.ts","store/index.ts","hooks/useTypedSelector.ts","utils/date.ts","components/EventCalendar.tsx","utils/rules.ts","components/EventForm.tsx","store/reducers/auth/action-creators.ts","api/UserService.ts","store/reducers/event/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","pages/events.tsx","components/LoginForm/index.tsx","pages/login.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["module","exports","AuthActionsEnum","EventActionEnum","initialState","isAuth","user","isLoading","error","guests","events","RouteNames","auth","state","action","type","SET_AUTH","payload","SET_ERROR","SET_IS_LOADING","SET_USER","event","SET_GUESTS","SET_EVENTS","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","useTypedSelector","useSelector","formatDate","date","year","getFullYear","month","getMonth","padStart","day","getDate","EventCalendar","props","dateCellRender","value","formatedDate","toDate","currentDates","filter","className","map","item","i","status","text","description","rules","message","required","validator","_","isSameOrAfter","moment","Promise","resolve","reject","Error","Option","Select","EventForm","useState","author","guest","setEvent","onFinish","submit","username","Item","label","name","onChange","e","target","style","width","justify","htmlType","AuthActionCreators","setUser","setIsAuth","setIsLoading","loading","setError","login","password","dispatch","a","setTimeout","axios","get","response","data","find","localStorage","setItem","logout","removeItem","UserService","EventActionCreators","setGuests","setEvents","fetchGuests","getUsers","console","log","createEvent","getItem","json","JSON","parse","push","stringify","fetchEvents","currentuserEvents","allActionCreators","useActions","useDispatch","bindActionCreators","Events","isModalVisible","setIsModalVisible","handleCancel","useEffect","align","onClick","title","visible","onCancel","footer","LoginForm","labelCol","span","wrapperCol","styles","form","values","Password","offset","Login","publicRoutes","LOGIN","component","exact","privateRoutes","EVENTS","AppRouter","route","path","to","Navbar","theme","selectable","mode","justifyContent","App","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e9750dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__cziyu\"};","import { IUser } from \"../../../models/IUser\";\r\n\r\nexport interface AuthState{\r\n    isAuth: boolean,\r\n    user: IUser,\r\n    isLoading: boolean,\r\n    error: string\r\n}\r\n\r\nexport enum AuthActionsEnum{\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_IS_LOADING = 'SET_IS_LOADING',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_USER = 'SET_USER'\r\n}\r\n\r\nexport interface SetAuthAction{\r\n    type: AuthActionsEnum.SET_AUTH\r\n    payload: boolean\r\n}\r\nexport interface SetErrorAction{\r\n    type: AuthActionsEnum.SET_ERROR\r\n    payload: string\r\n}\r\nexport interface SetIsLoadingAction{\r\n    type: AuthActionsEnum.SET_IS_LOADING\r\n    payload: boolean\r\n}\r\nexport interface SetUserAction{\r\n    type: AuthActionsEnum.SET_USER\r\n    payload: IUser\r\n}\r\n\r\nexport type AuthActions = SetAuthAction|SetErrorAction|SetIsLoadingAction|SetUserAction","import { IUser } from \"../../../models/IUser\"\r\nimport { AuthActions, AuthActionsEnum, AuthState } from \"./types\"\r\n\r\nconst initialState:AuthState = {\r\n    isAuth: false,\r\n    user: {} as IUser,\r\n    isLoading: false,\r\n    error: ''\r\n}\r\n\r\nexport default function authReducer(state = initialState, action:AuthActions):AuthState {\r\n    switch (action.type) {\r\n        case AuthActionsEnum.SET_AUTH:\r\n            return { ...state, isAuth: action.payload, isLoading: false }\r\n        case AuthActionsEnum.SET_ERROR:\r\n            return { ...state, error: action.payload, isLoading: false }\r\n        case AuthActionsEnum.SET_IS_LOADING:\r\n            return { ...state, isLoading: action.payload }\r\n        case AuthActionsEnum.SET_USER:\r\n            return { ...state, user: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/IUser\";\r\n\r\nexport interface EventState{\r\n    guests: IUser[],\r\n    events: IEvent[]\r\n}\r\n\r\nexport enum EventActionEnum{\r\n    SET_GUESTS = 'SET_GUESTS',\r\n    SET_EVENTS = 'SET_EVENTS',\r\n}\r\n\r\nexport interface SetGuestsAction{\r\n    type: EventActionEnum.SET_GUESTS\r\n    payload: IUser[]\r\n}\r\nexport interface SetEventsAction{\r\n    type: EventActionEnum.SET_EVENTS\r\n    payload: IEvent[]\r\n}\r\nexport type EventAction = SetGuestsAction | SetEventsAction","import { EventAction, EventActionEnum, EventState } from \"./types\"\r\n\r\nconst initialState: EventState = {\r\n    guests:[],\r\n    events:[]\r\n}\r\n\r\nexport default function EventReducer(state = initialState, action:EventAction):EventState {\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return { ...state, guests: action.payload }\r\n        case EventActionEnum.SET_EVENTS:\r\n            return {...state, events: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import auth from './auth'\r\nimport event from './event'\r\n\r\nexport default {\r\n    auth,\r\n    event\r\n}","import React from \"react\";\r\nimport Events from \"../pages/events\";\r\nimport Login from \"../pages/login\";\r\n\r\nexport interface IRoute {\r\n    path: string\r\n    component: React.ComponentType\r\n    exact?: boolean\r\n}\r\n\r\nexport enum RouteNames{\r\n    'LOGIN'= '/login',\r\n    'EVENTS'= '/'\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [{\r\n    'path': RouteNames.LOGIN,\r\n    component: Login,\r\n    exact: true\r\n}]\r\nexport const privateRoutes: IRoute[] = [{\r\n    'path': RouteNames.EVENTS,\r\n    component: Events,\r\n    exact: true\r\n}]","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatcher = typeof store.dispatch","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector:TypedUseSelectorHook<RootState> = useSelector","export const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear()\r\n    const month = `${date.getMonth()+1}`.padStart(2, '0')\r\n    const day = `${date.getDate()}`.padStart(2, '0')\r\n    return `${year}.${month}.${day}`\r\n}","import { Badge, Calendar } from 'antd'\r\nimport { Moment } from 'moment';\r\nimport React, { FC } from 'react'\r\nimport { IEvent } from '../models/IEvent'\r\nimport { formatDate } from '../utils/date';\r\n\r\ninterface EventCalendarProps{\r\n    events: IEvent[]\r\n}\r\n\r\nconst EventCalendar: FC<EventCalendarProps> = (props) => {\r\n    function dateCellRender(value: Moment) {\r\n        const formatedDate = formatDate(value.toDate())\r\n        const currentDates = props.events.filter(event => event.date === formatedDate)\r\n        return (\r\n            <div className=\"events\">\r\n                {currentDates.map((item,i) => (\r\n                    <div key={i}>\r\n                        <Badge status=\"success\" text={item.description} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Calendar dateCellRender={dateCellRender}/>\r\n    )\r\n}\r\n\r\nexport default EventCalendar\r\n","import moment, { Moment } from \"moment\";\r\n\r\nexport const rules = {\r\n    required: (message: string) => ({\r\n        required: true,\r\n        message\r\n    }),\r\n    isDateAfter: (message: string) => () => ({\r\n        validator(_: any, value: Moment) {\r\n            if (value.isSameOrAfter(moment())) {\r\n                return Promise.resolve()\r\n            }\r\n            return Promise.reject(new Error(message))\r\n        }\r\n    })\r\n}","import React, { FC, useState } from 'react'\r\nimport { Form, Input, Button, DatePicker, Row, Select } from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { IUser } from '../models/IUser';\r\nimport { IEvent } from '../models/IEvent';\r\nimport { Moment } from 'moment';\r\nimport { formatDate } from '../utils/date';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface EventProps{\r\n    guests: IUser[],\r\n    submit: (event:IEvent) => void\r\n}\r\n\r\nconst EventForm: FC<EventProps> = (props) => {\r\n    const [event, setEvent] = useState<IEvent>({\r\n        author: '',\r\n        description: '',\r\n        date: '',\r\n        guest: ''\r\n    } as IEvent)\r\n    const selectGuest = (guest:string) => setEvent({...event, guest})\r\n    const selectDate = (date: Moment | null) => {\r\n        if (date) {\r\n            setEvent({...event, date: formatDate(date.toDate())})\r\n        }\r\n    }\r\n    const {user } = useTypedSelector(state => state.auth)\r\n    const formSubmit = () => {\r\n        props.submit({ ...event, author: user.username });\r\n        \r\n    }\r\n    return (\r\n        <Form onFinish={formSubmit}>\r\n            <Form.Item\r\n                label=\"Описание события\"\r\n                name=\"description\"\r\n                rules={[rules.required('Введите описание события!')]}\r\n            >\r\n                <Input value={event.description} onChange={ (e) => setEvent({...event, description: e.target.value}) }/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Дата события\"\r\n                name=\"date\"\r\n                rules={[rules.required('Введите дату события!'), rules.isDateAfter('Некорректная дата')]}\r\n            >\r\n                <DatePicker style={{ width: '100%' }} onChange={selectDate}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Выберите гостя\"\r\n                name=\"user\"\r\n                rules={[rules.required('Введите имя гостя!')]}\r\n            >\r\n                <Select onChange={selectGuest}>\r\n                    {props.guests.map((guest, i) => <Option key={i} value={guest.username}>{guest.username}</Option>)}\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" >\r\n                    Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EventForm\r\n","import axios from \"axios\";\r\nimport { AppDispatcher } from \"../..\";\r\nimport { IUser } from \"../../../models/IUser\";\r\nimport { AuthActionsEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user:IUser):SetUserAction => ({\r\n        type: AuthActionsEnum.SET_USER,\r\n        payload: user\r\n    }),\r\n    setIsAuth: (auth: boolean):SetAuthAction => ({type: AuthActionsEnum.SET_AUTH, payload: auth}),\r\n    setIsLoading: (loading: boolean):SetIsLoadingAction => ({type: AuthActionsEnum.SET_IS_LOADING, payload: loading}),\r\n    setError: (error: string): SetErrorAction => ({ type: AuthActionsEnum.SET_ERROR, payload: error }),\r\n    login: (username: string, password: string) => async(dispatch:AppDispatcher) => {\r\n        try {\r\n            \r\n            dispatch(AuthActionCreators.setIsLoading(true))\r\n            setTimeout(async() => {\r\n                const response = await axios.get<IUser[]>('../users.json')\r\n                const user = response.data.find(value => value.username === username && value.password === password)\r\n                if (user) {\r\n                    localStorage.setItem('auth', 'true')\r\n                    localStorage.setItem('username', user.username)\r\n    \r\n                    dispatch(AuthActionCreators.setUser(user))\r\n                    dispatch(AuthActionCreators.setIsAuth(true))\r\n                } else {\r\n                    dispatch(AuthActionCreators.setError('Not found user'))\r\n                }                \r\n            }, 1000);\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('Error auth'))\r\n        }\r\n    },\r\n    logout: () => (dispatch: AppDispatcher) => {\r\n        try {\r\n            dispatch(AuthActionCreators.setIsAuth(false))\r\n            dispatch(AuthActionCreators.setUser({} as IUser))\r\n            dispatch(AuthActionCreators.setError(''))\r\n\r\n            localStorage.removeItem('auth')\r\n            localStorage.removeItem('username')\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('Error logout'))\r\n        }\r\n    }\r\n}","import axios, { AxiosResponse } from \"axios\";\r\nimport { IUser } from \"../models/IUser\";\r\n\r\nexport default class UserService{\r\n    static async getUsers(): Promise<AxiosResponse<IUser[]>>{\r\n        return axios.get<IUser[]>('./users.json')\r\n    }\r\n}","import { AppDispatcher } from \"../..\";\r\nimport UserService from \"../../../api/UserService\";\r\nimport { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/IUser\";\r\nimport { EventActionEnum, SetEventsAction, SetGuestsAction } from \"./types\";\r\n\r\nexport const EventActionCreators = {\r\n    setGuests: (payload: IUser[]):SetGuestsAction => ({type:EventActionEnum.SET_GUESTS, payload}),\r\n    setEvents: (payload: IEvent[]): SetEventsAction => ({ type: EventActionEnum.SET_EVENTS, payload }),\r\n    fetchGuests: () => async (dispatch: AppDispatcher) => {\r\n        try {\r\n            const response = await UserService.getUsers()\r\n           dispatch(EventActionCreators.setGuests(response.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    createEvent: (event: IEvent) => async (dispatch: AppDispatcher) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            console.log(typeof json)\r\n            json.push(event)\r\n            dispatch(EventActionCreators.setEvents(json))\r\n\r\n            localStorage.setItem('events', JSON.stringify(json))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    fetchEvents: (username: string) => async (dispatch: AppDispatcher) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            const currentuserEvents = json.filter(event => event.author === username || event.guest === username)\r\n           dispatch(EventActionCreators.setEvents(currentuserEvents))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n}","import { AuthActionCreators } from \"./auth/action-creators\";\r\nimport { EventActionCreators } from \"./event/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...EventActionCreators\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {allActionCreators} from '../store/reducers/action-creators'\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(allActionCreators, dispatch)\r\n}","import { Button, Layout, Modal, Row } from 'antd'\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport EventCalendar from '../components/EventCalendar'\r\nimport EventForm from '../components/EventForm'\r\nimport { useActions } from '../hooks/useActions'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { IEvent } from '../models/IEvent'\r\n\r\nconst Events: FC = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const showModal = () => setIsModalVisible(true)\r\n    const handleCancel = () => setIsModalVisible(false)\r\n\r\n    const { fetchGuests, createEvent, fetchEvents } = useActions()\r\n    const { guests, events} = useTypedSelector(state => state.event)\r\n    const { user} = useTypedSelector(state => state.auth)\r\n    useEffect(() => {\r\n        fetchGuests()\r\n        fetchEvents(user.username)\r\n    }, [])\r\n\r\n    const addEvent = (event:IEvent) => {\r\n        createEvent(event)\r\n        handleCancel()\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"height-100\">\r\n                <EventCalendar events={events}/>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Button onClick={showModal}>Добавить событие</Button>\r\n            </Row>\r\n            <Modal title=\"Добавить событие\" visible={isModalVisible} onCancel={handleCancel} footer=''>\r\n                <EventForm guests={guests} submit={addEvent}/>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Events\r\n","import { FC } from 'react'\r\nimport { Form, Input, Button, Alert } from 'antd';\r\n\r\nimport styles from './index.module.css'\r\nimport { rules } from '../../utils/rules';\r\nimport { IUser } from '../../models/IUser';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useActions } from '../../hooks/useActions';\r\n\r\nconst LoginForm: FC = () => {\r\n    const { isLoading, error } = useTypedSelector(state => state.auth)\r\n    const { login} = useActions()\r\n    const onFinishHandler = (values: IUser) => {\r\n        const {username, password } = values\r\n        login(username, password )\r\n    }\r\n\r\n    return (\r\n        <Form name=\"basic\"\r\n            labelCol={{ span: 11 }}\r\n            wrapperCol={{ span: 13 }}\r\n            className={styles.form}\r\n            onFinish={onFinishHandler}\r\n        >\r\n            {error && <Alert\r\n                message={error}\r\n                type=\"error\"\r\n            />\r\n            }\r\n            <Form.Item\r\n                label=\"Имя пользователя\"\r\n                name=\"username\"\r\n                rules={[rules.required('Введите имя пользователя!')]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Пароль\"\r\n                name=\"password\"\r\n                rules={[rules.required('Введите пароль!')]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { Card, Layout, Row } from 'antd'\r\nimport React, { FC } from 'react'\r\nimport LoginForm from '../components/LoginForm/index'\r\n\r\nconst Login:FC = (props) => {\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"height-100\">\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Redirect, Route, Switch } from 'react-router'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { privateRoutes, publicRoutes, RouteNames} from '../router'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst AppRouter = (props: Props) => {\r\n    const auth = useTypedSelector(state => state.auth.isAuth)\r\n    return (\r\n        auth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route => <Route key={route.path} {...route} />)}\r\n                <Redirect to={ RouteNames.EVENTS}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route => <Route key={route.path}  {...route} />)}\r\n                <Redirect to={ RouteNames.LOGIN}/>\r\n            </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { Menu} from 'antd'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useActions } from '../hooks/useActions'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { RouteNames } from '../router'\r\n\r\nconst Navbar: FC = () => {\r\n    const {isAuth, user} = useTypedSelector(state => state.auth)\r\n    const { logout} = useActions()\r\n    return (\r\n        <Header >\r\n            <Menu theme=\"dark\" selectable={false} mode=\"horizontal\" style={{ justifyContent: 'end' }}>\r\n                {isAuth\r\n                    ?\r\n                        <>\r\n                           <Menu.Item key=\"1\"> <div>{user.username}</div></Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={logout}><Link to={RouteNames.LOGIN}>Выйти</Link></Menu.Item>\r\n                        </>\r\n                    :\r\n                        <Menu.Item key=\"1\"><Link to={RouteNames.LOGIN}>Login</Link></Menu.Item>\r\n                }\r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { FC, useEffect } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Content } from 'antd/lib/layout/layout';\r\n\r\nimport AppRouter from './components/AppRouter';\r\nimport Navbar from './components/Navbar';\r\nimport { useActions } from './hooks/useActions';\r\nimport { IUser } from './models/IUser';\r\n\r\nconst App: FC = () => {\r\n  const {setUser, setIsAuth } = useActions()\r\n  useEffect(() => {\r\n    if (localStorage.getItem('auth')) {\r\n      setIsAuth(true)\r\n      setUser({username: localStorage.getItem('username')} as IUser)\r\n    } else {\r\n      setIsAuth(false)\r\n      setUser({} as IUser)\r\n    }\r\n  }, [])\r\n  return (\r\n    <Layout>\r\n      <Navbar />\r\n      <Content>\r\n        <AppRouter/>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport App from './App';\n\nimport 'antd/dist/antd.css';\nimport './App.css'\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}